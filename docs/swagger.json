{
    "swagger": "2.0",
    "info": {
        "description": "This is a sample music library API.",
        "title": "Music Library API",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/",
    "paths": {
        "/song": {
            "get": {
                "description": "Receive list of all songs",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "song"
                ],
                "summary": "Get list of all songs",
                "parameters": [
                    {
                        "type": "string",
                        "description": "name search by songName",
                        "name": "songName",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "name search by group",
                        "name": "group",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page number for pagination",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of verses per page",
                        "name": "page_size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Songs"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.ErrResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new song to the music library",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "song"
                ],
                "summary": "Add a new song",
                "parameters": [
                    {
                        "description": "New song information",
                        "name": "newSong",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.NewSong"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.Song"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.ErrResponse"
                        }
                    }
                }
            }
        },
        "/song/{id}": {
            "get": {
                "description": "Receive list of all verses from a song",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "song"
                ],
                "summary": "Get all verses of song",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Filter by verse number",
                        "name": "verseNumber",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page number for pagination",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of verses per page",
                        "name": "page_size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Verses"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.ErrResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete the details of an existing song from the music library.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "song"
                ],
                "summary": "Delete an existing song",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Song ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully deleted song",
                        "schema": {
                            "$ref": "#/definitions/model.ErrResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied",
                        "schema": {
                            "$ref": "#/definitions/model.ErrResponse"
                        }
                    },
                    "404": {
                        "description": "Song not found",
                        "schema": {
                            "$ref": "#/definitions/model.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/model.ErrResponse"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update the details of an existing song in the music library.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "song"
                ],
                "summary": "Update an existing song",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Song ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated song information",
                        "name": "songHolder",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.SongHolder"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully updated song",
                        "schema": {
                            "$ref": "#/definitions/model.Song"
                        }
                    },
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.Song"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.ErrResponse"
                        }
                    }
                }
            }
        },
        "/verse": {
            "post": {
                "description": "Insert a new song into the music library.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "song"
                ],
                "summary": "Add a new song",
                "responses": {
                    "200": {
                        "description": "Successfully inserted song",
                        "schema": {
                            "$ref": "#/definitions/model.ErrResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "$ref": "#/definitions/model.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/model.ErrResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "model.ErrResponse": {
            "type": "object",
            "properties": {
                "error": {}
            }
        },
        "model.NewSong": {
            "type": "object",
            "properties": {
                "group": {
                    "type": "string"
                },
                "song": {
                    "type": "string"
                }
            }
        },
        "model.Song": {
            "type": "object",
            "properties": {
                "group": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "song": {
                    "type": "string"
                },
                "verses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.SongVerse"
                    }
                }
            }
        },
        "model.SongHolder": {
            "type": "object",
            "properties": {
                "group": {
                    "type": "string"
                },
                "song": {
                    "type": "string"
                }
            }
        },
        "model.SongVerse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "verse_number": {
                    "type": "integer"
                }
            }
        },
        "model.Songs": {
            "type": "object",
            "properties": {
                "songs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Song"
                    }
                }
            }
        },
        "model.Verses": {
            "type": "object",
            "properties": {
                "verses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.SongVerse"
                    }
                }
            }
        }
    }
}